package ru.polardl.homeshopping.GUI;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import ru.polardl.homeshopping.Models.Item;
import static ru.polardl.homeshopping.Models.ItemList.getItemListMap;
import ru.polardl.homeshopping.Models.OrderPosition;

public class AddItemsToNewOrderForm extends javax.swing.JFrame {
    
    static HashMap<Long, OrderPosition> orderPositionMap;

    /**
     * Creates new form AddItemsToNewOrderForm
     */
    public AddItemsToNewOrderForm() {
        initComponents();
        setTitle("Adding Items to the Order");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
        
        
        
        //thigs to do on closing
        addWindowListener(new WindowAdapter()
        {
            @Override
            public void windowClosing(WindowEvent e)
            {
                System.out.println("Closed");
//                e.getWindow().dispose(); //why this?
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        itemIDJL = new javax.swing.JLabel();
        quantityJL = new javax.swing.JLabel();
        itemIDInput = new javax.swing.JTextField();
        quantityInput = new javax.swing.JTextField();
        ReturnToCreatingOrderBtn = new javax.swing.JButton();
        addItemBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        itemIDJL.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        itemIDJL.setText("Item ID");

        quantityJL.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        quantityJL.setText("Quantity");

        itemIDInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        quantityInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        ReturnToCreatingOrderBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ReturnToCreatingOrderBtn.setText("Return to creating Order");

        addItemBtn.setText("Add Item");
        addItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("When finished adding all Items press:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ReturnToCreatingOrderBtn)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(itemIDJL, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quantityJL))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(itemIDInput, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                    .addComponent(quantityInput))
                                .addGap(18, 18, 18)
                                .addComponent(addItemBtn))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel1)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(itemIDJL)
                            .addComponent(itemIDInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quantityJL)
                            .addComponent(quantityInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(addItemBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ReturnToCreatingOrderBtn)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemBtnActionPerformed
        // TODO add your handling code here:
        long itemID = 0;
        int quantity = 0;
        OrderPosition orderPosition = null;
        HashMap<Long, Item> itemListMap = getItemListMap();
        
        
        if (itemIDInput.getText().length() != 0) {
            try {
                long buf = Long.parseLong(itemIDInput.getText());
                
                if (itemListMap.containsKey(buf)) {
                    
                    itemID = buf;
                    
                } else {
                    WrongInputForm.wrongInputMassage = "No Item with this ID in the Price List. Check input";
                    new WrongInputForm().setVisible(true);
                }
            } catch (Exception e) {
                WrongInputForm.wrongInputMassage = "Item ID must be an uninterrupted sequence of numbers. Check input";
                new WrongInputForm().setVisible(true);
            }
        } else {
            WrongInputForm.wrongInputMassage = "Item ID can't be empty. Check input";
            new WrongInputForm().setVisible(true);
        }
        
        
        if (quantityInput.getText().length() != 0) {
            try {
                int buf = Integer.parseInt(quantityInput.getText());
                if (buf != 0) {
                    
                    quantity = buf;
                    
                } else {
                    WrongInputForm.wrongInputMassage = "Quantity can't be 0. Check input";
                    new WrongInputForm().setVisible(true);
                }
            } catch (Exception e) {
                WrongInputForm.wrongInputMassage = "Quantity must be an uninterrupted sequence of numbers. Check input";
                new WrongInputForm().setVisible(true);
            }
        } else {
            WrongInputForm.wrongInputMassage = "Quantity can't be empty. Check input";
            new WrongInputForm().setVisible(true);
        }
        
        
        
        if (itemID != 0 && quantity != 0) {
            try {
                orderPosition = new OrderPosition(itemID, quantity);
            } catch (Exception ex) {
                Logger.getLogger(AddItemsToNewOrderForm.class.getName()).log(Level.SEVERE, null, ex); //should never be thrown
            }
        }
        
        
        
//        if (itemID != 0 && orderPosition != null) {
//            CreateOrderForm.orderPositionMap.put(itemID, orderPosition);
//        }


        System.out.println(itemID);
        System.out.println(orderPosition);
        
        
        if (itemID != 0 && orderPosition != null) {
           orderPositionMap.put(itemID, orderPosition);
        }
        
        
    }//GEN-LAST:event_addItemBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddItemsToNewOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddItemsToNewOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddItemsToNewOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddItemsToNewOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddItemsToNewOrderForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ReturnToCreatingOrderBtn;
    private javax.swing.JButton addItemBtn;
    private javax.swing.JTextField itemIDInput;
    private javax.swing.JLabel itemIDJL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField quantityInput;
    private javax.swing.JLabel quantityJL;
    // End of variables declaration//GEN-END:variables
}
